(function () {
  // ---------- INIT ----------
  window.m3u8Store = window.m3u8Store || [];
  window.m3u8ExportHistory = window.m3u8ExportHistory || []; // History export
  
  // Variabel untuk melacak urutan klik episode
  let episodeClickCounter = 0;
  let lastClickedEpisode = null;

  // Settings untuk auto close
  const AUTO_CLOSE_SETTINGS = {
    enabled: true, // Default enable auto close
    delay: 2000 // 2 detik setelah export
  };

  function extractEpisodeFromURL(url) {
    // Pertama coba ekstrak dari URL seperti sebelumnya
    const match = url.match(/_(\d{1,3})\//);
    const episodeFromURL = match ? parseInt(match[1], 10) : null;
    
    // Jika dari URL dapat episode number, gunakan itu
    if (episodeFromURL) return episodeFromURL;
    
    // Jika dari URL null, gunakan lastClickedEpisode atau increment counter
    if (lastClickedEpisode) {
      return lastClickedEpisode;
    } else {
      episodeClickCounter++;
      return episodeClickCounter;
    }
  }

  // Setup event listener untuk melacak klik pada episode
  document.addEventListener('click', function(e) {
    // Cari elemen yang mungkin merupakan tombol/link episode
    const target = e.target;
    const isEpisodeElement = target.closest('a[href*="episode"]') || 
                            target.closest('button') ||
                            target.closest('[data-episode]') ||
                            target.closest('.episode');
    
    if (isEpisodeElement) {
      episodeClickCounter++;
      lastClickedEpisode = episodeClickCounter;
      console.log(`%c[Episode Click]`, "color: cyan;", `Episode ${lastClickedEpisode} terdeteksi`);
    }
  });

  function saveRecord(url) {
    if (window.m3u8Store.some(r => r.url === url)) return;

    const episodeFromURL = extractEpisodeFromURL(url);
    const record = {
      pageURL: location.href,
      url: url,
      episodeDisplay: (document.querySelector(".ml-6")?.innerText || "").trim(),
      episodeNumber: episodeFromURL,
      timestamp: new Date().toISOString(),
      exported: false // Flag untuk menandai sudah diexport atau belum
    };
    window.m3u8Store.push(record);

    // Hanya show toast untuk 5 data pertama atau jika ada data baru yang penting
    if (window.m3u8Store.length <= 5 || episodeFromURL) {
      showToast(record);
    }
    
    updateDataCount();
    console.log(
      `%c[M3U8 #${window.m3u8Store.length}]`,
      "color: lime; font-weight: bold;",
      "\nEpisode:", record.episodeNumber ?? record.episodeDisplay,
      "\nURL :", record.url,
      "\nPage :", record.pageURL
    );
  }

  // ---------- HOOK FETCH ----------
  const origFetch = window.fetch;
  window.fetch = async (...args) => {
    const res = await origFetch(...args);
    if (args[0] && args[0].toString().includes(".m3u8")) {
      saveRecord(args[0].toString());
    }
    return res;
  };

  // ---------- HOOK XHR ----------
  const origOpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function (method, url, ...rest) {
    if (url && url.toString().includes(".m3u8")) {
      this.addEventListener("load", () => saveRecord(url.toString()));
    }
    return origOpen.call(this, method, url, ...rest);
  };

  // ---------- FITUR AUTO CLOSE ----------
  window.toggleAutoClose = function() {
    AUTO_CLOSE_SETTINGS.enabled = !AUTO_CLOSE_SETTINGS.enabled;
    updateAutoCloseButton();
    toastInfo(`Auto Close ${AUTO_CLOSE_SETTINGS.enabled ? 'diaktifkan' : 'dinonaktifkan'}`, 1500);
  };

  function updateAutoCloseButton() {
    const stickyToast = document.getElementById("m3u8-sticky-export");
    if (!stickyToast) return;
    
    let autoCloseBtn = stickyToast.querySelector(".auto-close-btn");
    if (!autoCloseBtn) {
      autoCloseBtn = document.createElement("button");
      autoCloseBtn.className = "auto-close-btn";
      autoCloseBtn.style.cssText = `
        background: #444; 
        color: #fff; 
        border: none; 
        padding: 2px 6px; 
        margin-left: 5px; 
        border-radius: 4px; 
        cursor: pointer; 
        font-size: 11px;
        border: 1px solid #666;
      `;
      autoCloseBtn.title = "Toggle Auto Close setelah export";
      stickyToast.querySelector("div").appendChild(autoCloseBtn);
    }
    
    autoCloseBtn.textContent = AUTO_CLOSE_SETTINGS.enabled ? "🔴 Auto" : "⚪ Auto";
    autoCloseBtn.style.background = AUTO_CLOSE_SETTINGS.enabled ? "#e74c3c" : "#444";
  }

  function closeAllToasts() {
    const container = document.getElementById("m3u8-toast-container");
    if (!container) return;
    
    const toasts = container.querySelectorAll('div:not(#m3u8-sticky-export)');
    toasts.forEach(toast => {
      toast.style.transition = "opacity 0.5s";
      toast.style.opacity = "0";
      setTimeout(() => toast.remove(), 500);
    });
  }

  // ---------- EXPORT ALL ----------
  window.exportM3U8JSON = function () {
    if (!window.m3u8Store.length) {
      toastInfo("Belum ada data di m3u8Store");
      return;
    }

    let filename = prompt("Masukkan nama file JSON:", "m3u8-data.json");
    if (!filename) return; // User menekan cancel
    if (!filename.endsWith(".json")) filename += ".json";

    // Tandai data yang diexport
    const unexportedData = window.m3u8Store.filter(item => !item.exported);
    unexportedData.forEach(item => item.exported = true);

    // Simpan history export
    const exportRecord = {
      filename: filename,
      timestamp: new Date().toISOString(),
      dataCount: window.m3u8Store.length,
      newDataCount: unexportedData.length
    };
    window.m3u8ExportHistory.push(exportRecord);

    const json = JSON.stringify(window.m3u8Store, null, 2);
    const blob = new Blob([json], { type: "application/json" });
    const a = document.createElement("a");
    a.href = URL.createObjectURL(blob);
    a.download = filename;
    a.click();
    URL.revokeObjectURL(a.href);

    updateDataCount();
    
    // Toast yang lebih informatif tentang export
    const toastMsg = unexportedData.length > 0 
      ? `✅ ${unexportedData.length} data baru diexport ke ${filename}`
      : `✅ Data diexport ke ${filename} (semua data sudah pernah diexport)`;
    
    toastSuccess(toastMsg, 3000);

    // Auto close semua toast setelah export jika enabled
    if (AUTO_CLOSE_SETTINGS.enabled) {
      setTimeout(() => {
        closeAllToasts();
        console.log("%c[Auto Close] Semua toast ditutup setelah export", "color: cyan;");
      }, AUTO_CLOSE_SETTINGS.delay);
    }
  };

  // ---------- FITUR BARU: LIHAT DATA & CLEAR DATA ----------
  
  /**
   * Menampilkan data yang tersimpan di console.
   */
  window.viewM3U8Data = function() {
    if (!window.m3u8Store.length) {
        toastInfo("Belum ada data untuk ditampilkan.");
        return;
    }
    console.log("--- Menampilkan Data M3U8 yang Tertangkap ---");
    console.table(window.m3u8Store.map(item => ({
      Episode: item.episodeNumber ?? item.episodeDisplay,
      URL: item.url,
      Exported: item.exported ? '✅' : '❌',
      Timestamp: item.timestamp
    })));
    
    // Juga tampilkan summary di console
    const exportedCount = window.m3u8Store.filter(item => item.exported).length;
    console.log(`%cSummary: ${exportedCount}/${window.m3u8Store.length} data sudah diexport`, 
                "color: cyan; font-weight: bold;");
    
    toastInfo("ℹ️ Data ditampilkan di Console (tekan F12).", 2000);
  };

  /**
   * Menghapus semua data yang tersimpan setelah konfirmasi.
   */
  window.clearM3U8Data = function() {
    if (!window.m3u8Store.length) {
        toastInfo("Data sudah kosong.");
        return;
    }
    
    const unexportedCount = window.m3u8Store.filter(item => !item.exported).length;
    let confirmMsg = "Apakah Anda yakin ingin menghapus semua data yang tertangkap?";
    
    if (unexportedCount > 0) {
      confirmMsg += `\n\n⚠️ PERINGATAN: Ada ${unexportedCount} data yang BELUM di export!`;
    }
    
    if (confirm(confirmMsg)) {
        window.m3u8Store = [];
        episodeClickCounter = 0;
        lastClickedEpisode = null;
        updateDataCount();
        toastSuccess("✅ Semua data telah dihapus.", 2000);
        console.log("%c[M3U8] Store telah dibersihkan.", "color: yellow;");
    }
  };

  // ---------- FITUR BARU: UPDATE DATA COUNT DISPLAY ----------
  function updateDataCount() {
    const stickyToast = document.getElementById("m3u8-sticky-export");
    if (!stickyToast) return;
    
    const countElement = stickyToast.querySelector(".data-count") || document.createElement("div");
    
    if (!stickyToast.querySelector(".data-count")) {
      countElement.className = "data-count";
      countElement.style.cssText = `
        font-size: 12px;
        color: #ecf0f1;
        background: #34495e;
        padding: 3px 8px;
        border-radius: 12px;
        margin-top: 5px;
        text-align: center;
        font-weight: bold;
      `;
      stickyToast.appendChild(countElement);
    }
    
    const totalCount = window.m3u8Store.length;
    const exportedCount = window.m3u8Store.filter(item => item.exported).length;
    const newDataCount = totalCount - exportedCount;
    
    let countText = `📊 Total: ${totalCount}`;
    if (exportedCount > 0) {
      countText += ` | ✅: ${exportedCount}`;
    }
    if (newDataCount > 0) {
      countText += ` | 🆕: ${newDataCount}`;
    }
    
    countElement.textContent = countText;
    
    // Warna background berdasarkan status data
    if (newDataCount > 0) {
      countElement.style.background = "#e74c3c"; // Merah jika ada data baru
    } else if (totalCount > 0) {
      countElement.style.background = "#27ae60"; // Hijau jika semua sudah diexport
    } else {
      countElement.style.background = "#34495e"; // Default jika kosong
    }
    
    // Animasi update count
    countElement.style.transform = "scale(1.1)";
    setTimeout(() => {
      countElement.style.transform = "scale(1)";
    }, 300);
  }

  // ---------- TOAST UI (DIMINIMALKAN) ----------
  const containerId = "m3u8-toast-container";
  function ensureToastContainer() {
    let el = document.getElementById(containerId);
    if (!el) {
      el = document.createElement("div");
      el.id = containerId;
      el.style.cssText = `
        position:fixed; top:10px; right:10px; z-index:999999;
        display:flex; flex-direction:column; gap:8px; max-width:300px;
      `;
      document.body.appendChild(el);
    }
    return el;
  }

  function makeButton(label, onClick, small = false) {
    const btn = document.createElement("button");
    btn.textContent = label;
    btn.style.cssText = `
      background:#444; color:#fff; border:none; padding:${small ? "2px 6px" : "4px 8px"};
      margin-left:5px; border-radius:4px; cursor:pointer; font-size:${small ? "11px" : "13px"};
    `;
    btn.onclick = onClick;
    return btn;
  }

  // Notifikasi Episode (auto-hide) - DIMINIMALKAN
  function showToast(record) {
    // Skip toast setelah 5 data pertama untuk mengurangi notifikasi
    if (window.m3u8Store.length > 5) return;
    
    const container = ensureToastContainer();
    const toast = document.createElement("div");
    toast.style.cssText = `
      background:#222; color:#fff; padding:8px; border-radius:6px;
      box-shadow:0 2px 6px rgba(0,0,0,0.3); font-family:sans-serif;
      animation:fadeIn 0.3s ease; font-size: 12px;
    `;

    const ep = record.episodeNumber ?? record.episodeDisplay ?? "Unknown";
    toast.innerHTML = `<div style="font-weight:bold;margin-bottom:2px">🎬 Ep ${ep}</div>`;

    const btnRow = document.createElement("div");
    btnRow.style.marginTop = "4px";
    btnRow.appendChild(makeButton("Copy", () => {
      navigator.clipboard.writeText(record.url);
      toastSuccess("URL dicopy", 1500);
    }, true));
    btnRow.appendChild(makeButton("✕", () => toast.remove(), true));

    toast.appendChild(btnRow);
    container.appendChild(toast);

    // Auto-hide lebih cepat
    setTimeout(() => {
      toast.style.transition = "opacity 0.3s";
      toast.style.opacity = "0";
      setTimeout(() => toast.remove(), 300);
    }, 3000);
  }

  // Sticky Export All Toast
  (function showStickyExport() {
    const container = ensureToastContainer();
    let existing = document.getElementById("m3u8-sticky-export");
    if (existing) return;

    const toast = document.createElement("div");
    toast.id = "m3u8-sticky-export";
    toast.style.cssText = `
      background:#2c3e50; color:#fff; padding:10px; border-radius:6px;
      box-shadow:0 2px 6px rgba(0,0,0,0.4); font-family:sans-serif;
    `;
    toast.innerHTML = `<div style="font-weight:bold;margin-bottom:6px">📂 Export M3U8</div>`;

    const btnRow = document.createElement("div");
    btnRow.appendChild(makeButton("Export All", () => window.exportM3U8JSON()));
    btnRow.appendChild(makeButton("View", () => window.viewM3U8Data(), true));
    btnRow.appendChild(makeButton("Clear", () => window.clearM3U8Data(), true));
    btnRow.appendChild(makeButton("Dedupe", () => window.deduplicateM3U8(), true));

    toast.appendChild(btnRow);
    container.appendChild(toast);
    
    // Tambahkan tombol auto close
    updateAutoCloseButton();
    updateDataCount();
  })();

  // Toast functions dengan durasi lebih pendek
  function toastInfo(msg, duration = 2000) {
    const c = ensureToastContainer();
    const el = document.createElement("div");
    el.style.cssText = `background:#3498db;color:#fff;padding:6px 8px;border-radius:6px;font-size:12px;`;
    el.textContent = msg;
    c.appendChild(el);
    setTimeout(() => el.remove(), duration);
  }

  function toastSuccess(msg, duration = 2000) {
    const c = ensureToastContainer();
    const el = document.createElement("div");
    el.style.cssText = `background:#2ecc71;color:#fff;padding:6px 8px;border-radius:6px;font-size:12px;`;
    el.textContent = msg;
    c.appendChild(el);
    setTimeout(() => el.remove(), duration);
  }

  // ---------- CLEAN DUPLICATE ----------
  window.deduplicateM3U8 = function () {
    const originalCount = window.m3u8Store.length;
    const unique = [];
    const seen = new Set();
    for (const rec of window.m3u8Store) {
      if (!seen.has(rec.url)) {
        seen.add(rec.url);
        unique.push(rec);
      }
    }
    const removedCount = originalCount - unique.length;
    window.m3u8Store = unique;
    updateDataCount();
    toastSuccess(`✅ ${removedCount} duplikat dibersihkan`, 2000);
  };

  console.log("%c[OK] M3U8 Sniffer aktif. Semua URL akan dicatat di window.m3u8Store", "color: orange;");
  console.log("%c[Auto Close] Fitur auto close aktif (🔴)", "color: cyan;");
})();
