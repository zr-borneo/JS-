(function () {
  // ---------- INIT ----------
  window.m3u8Store = window.m3u8Store || [];

  function extractEpisodeFromURL(url) {
    const match = url.match(/_(\d{1,3})\//);
    return match ? parseInt(match[1], 10) : null;
  }

  function saveRecord(url) {
    if (window.m3u8Store.some(r => r.url === url)) return;

    const episodeFromURL = extractEpisodeFromURL(url);
    const record = {
      pageURL: location.href,
      url: url,
      episodeDisplay: (document.querySelector(".ml-6")?.innerText || "").trim(),
      episodeNumber: episodeFromURL,
      timestamp: new Date().toISOString()
    };
    window.m3u8Store.push(record);

    showToast(record);
    console.log(
      `%c[M3U8 #${window.m3u8Store.length}]`,
      "color: lime; font-weight: bold;",
      "\nEpisode:", record.episodeNumber ?? record.episodeDisplay,
      "\nURL :", record.url,
      "\nPage :", record.pageURL
    );
  }

  // ---------- HOOK FETCH ----------
  const origFetch = window.fetch;
  window.fetch = async (...args) => {
    const res = await origFetch(...args);
    if (args[0] && args[0].toString().includes(".m3u8")) {
      saveRecord(args[0].toString());
    }
    return res;
  };

  // ---------- HOOK XHR ----------
  const origOpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function (method, url, ...rest) {
    if (url && url.toString().includes(".m3u8")) {
      this.addEventListener("load", () => saveRecord(url.toString()));
    }
    return origOpen.call(this, method, url, ...rest);
  };

  // ---------- EXPORT ALL ----------
  window.exportM3U8JSON = function () {
    if (!window.m3u8Store.length) {
      toastInfo("Belum ada data di m3u8Store");
      return;
    }

    let filename = prompt("Masukkan nama file JSON:", "m3u8-data.json");
    if (!filename) return; // User menekan cancel
    if (!filename.endsWith(".json")) filename += ".json";

    const json = JSON.stringify(window.m3u8Store, null, 2);
    const blob = new Blob([json], { type: "application/json" });
    const a = document.createElement("a");
    a.href = URL.createObjectURL(blob);
    a.download = filename;
    a.click();
    URL.revokeObjectURL(a.href);

    toastSuccess(`‚úÖ Data diexport ke ${filename}`);
  };

  // ---------- FITUR BARU: LIHAT DATA & CLEAR DATA ----------
  
  /**
   * Menampilkan data yang tersimpan di console.
   */
  window.viewM3U8Data = function() {
    if (!window.m3u8Store.length) {
        toastInfo("Belum ada data untuk ditampilkan.");
        return;
    }
    console.log("--- Menampilkan Data M3U8 yang Tertangkap ---");
    console.table(window.m3u8Store);
    toastInfo("‚ÑπÔ∏è Data ditampilkan di Console (tekan F12).");
  };

  /**
   * Menghapus semua data yang tersimpan setelah konfirmasi.
   */
  window.clearM3U8Data = function() {
    if (!window.m3u8Store.length) {
        toastInfo("Data sudah kosong.");
        return;
    }
    if (confirm("Apakah Anda yakin ingin menghapus semua data yang tertangkap?")) {
        window.m3u8Store = [];
        toastSuccess("‚úÖ Semua data telah dihapus.");
        console.log("%c[M3U8] Store telah dibersihkan.", "color: yellow;");
    }
  };


  // ---------- TOAST UI ----------
  const containerId = "m3u8-toast-container";
  function ensureToastContainer() {
    let el = document.getElementById(containerId);
    if (!el) {
      el = document.createElement("div");
      el.id = containerId;
      el.style.cssText = `
        position:fixed; top:10px; right:10px; z-index:999999;
        display:flex; flex-direction:column; gap:8px; max-width:300px;
      `;
      document.body.appendChild(el);
    }
    return el;
  }

  function makeButton(label, onClick, small = false) {
    const btn = document.createElement("button");
    btn.textContent = label;
    btn.style.cssText = `
      background:#444; color:#fff; border:none; padding:${small ? "2px 6px" : "4px 8px"};
      margin-left:5px; border-radius:4px; cursor:pointer; font-size:${small ? "11px" : "13px"};
    `;
    btn.onclick = onClick;
    return btn;
  }

  // Notifikasi Episode (auto-hide)
  function showToast(record) {
    const container = ensureToastContainer();
    const toast = document.createElement("div");
    toast.style.cssText = `
      background:#222; color:#fff; padding:10px; border-radius:6px;
      box-shadow:0 2px 6px rgba(0,0,0,0.3); font-family:sans-serif;
      animation:fadeIn 0.3s ease;
    `;

    const ep = record.episodeNumber ?? record.episodeDisplay ?? "Unknown";
    toast.innerHTML = `<div style="font-weight:bold;margin-bottom:4px">üé¨ Episode ${ep}</div>`;

    const btnRow = document.createElement("div");
    btnRow.style.marginTop = "6px";
    btnRow.appendChild(makeButton("Copy URL", () => {
      navigator.clipboard.writeText(record.url);
      toastSuccess("URL dicopy");
    }));
    btnRow.appendChild(makeButton("Tutup", () => toast.remove(), true));

    toast.appendChild(btnRow);
    container.appendChild(toast);

    setTimeout(() => {
      toast.style.transition = "opacity 0.5s";
      toast.style.opacity = "0";
      setTimeout(() => toast.remove(), 500);
    }, 6000);
  }

  // Sticky Export All Toast (Dengan tombol baru)
  (function showStickyExport() {
    const container = ensureToastContainer();
    let existing = document.getElementById("m3u8-sticky-export");
    if (existing) return; // hanya sekali

    const toast = document.createElement("div");
    toast.id = "m3u8-sticky-export";
    toast.style.cssText = `
      background:#2c3e50; color:#fff; padding:10px; border-radius:6px;
      box-shadow:0 2px 6px rgba(0,0,0,0.4); font-family:sans-serif;
    `;
    toast.innerHTML = `<div style="font-weight:bold;margin-bottom:6px">üìÇ Export M3U8</div>`;

    const btnRow = document.createElement("div");
    btnRow.appendChild(makeButton("Export All", () => window.exportM3U8JSON()));

    // === Tombol baru ditambahkan di sini ===
    btnRow.appendChild(makeButton("Lihat Data", () => window.viewM3U8Data(), true));
    btnRow.appendChild(makeButton("Clear", () => window.clearM3U8Data(), true));
    // =====================================
    
    btnRow.appendChild(makeButton("Deduplicate", () => window.deduplicateM3U8(), true));

    toast.appendChild(btnRow);
    container.appendChild(toast);
  })();

  function toastInfo(msg) {
    const c = ensureToastContainer();
    const el = document.createElement("div");
    el.style.cssText = `background:#3498db;color:#fff;padding:8px;border-radius:6px;`;
    el.textContent = msg;
    c.appendChild(el);
    setTimeout(() => el.remove(), 4000);
  }

  function toastSuccess(msg) {
    const c = ensureToastContainer();
    const el = document.createElement("div");
    el.style.cssText = `background:#2ecc71;color:#fff;padding:8px;border-radius:6px;`;
    el.textContent = msg;
    c.appendChild(el);
    setTimeout(() => el.remove(), 4000);
  }

  // ---------- CLEAN DUPLICATE ----------
  window.deduplicateM3U8 = function () {
    const originalCount = window.m3u8Store.length;
    const unique = [];
    const seen = new Set();
    for (const rec of window.m3u8Store) {
      if (!seen.has(rec.url)) {
        seen.add(rec.url);
        unique.push(rec);
      }
    }
    const removedCount = originalCount - originalCount;
    window.m3u8Store = unique;
    toastSuccess(`‚úÖ ${removedCount} duplikat dibersihkan. Sisa data: ${unique.length}`);
  };

  console.log("%c[OK] M3U8 Sniffer aktif. Semua URL akan dicatat di window.m3u8Store", "color: orange;");
})();
